version: '3'
services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    working_dir: /app/frontend
    command: ["npm", "start"]
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    ports:
      - "${MAIN_SERVER_PORT}:${MAIN_SERVER_PORT}"
    working_dir: /app/server
    command: ["npm", "start"]
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy

  redis:
    image: redis
    command: --port ${REDIS_PORT}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    env_file:
      - .env

  postgres:
    image: postgres:13.3
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "PGUSER=${DB_USER}", "pg_isready"]
      interval: 1s
      timeout: 10s
      retries: 5
    volumes:  # Persist the db data
      - database-data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file:
      - .env
    command: -p ${DB_PORT}

volumes:
  database-data: